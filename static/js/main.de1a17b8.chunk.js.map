{"version":3,"sources":["components/quotes/QuoteForm.module.css","components/layout/MainNavigation.module.css","components/comments/NewCommentForm.module.css","components/quotes/QuoteList.module.css","components/quotes/QuoteItem.module.css","components/ui/LoadingSpinner.module.css","components/quotes/NoQuotesFound.module.css","components/ui/Card.module.css","components/quotes/HighlightedQuote.module.css","components/comments/Comments.module.css","components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/layout/Layout.module.css","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","hooks/use-http.js","lib/api.js","components/ui/LoadingSpinner.js","components/quotes/NoQuotesFound.js","Pages/AllQuotes.js","components/ui/Card.js","components/quotes/QuoteForm.js","Pages/NewQuote.js","components/quotes/HighlightedQuote.js","components/comments/NewCommentForm.js","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/Comments.js","Pages/NotFound.js","Pages/QuoteDetail.js","components/layout/MainNavigation.js","components/layout/Layout.js","App.js","index.js"],"names":["module","exports","QuoteItem","props","className","classes","item","text","author","to","id","QuoteList","quotes","ascending","history","useHistory","location","useLocation","isSortingAscending","URLSearchParams","search","get","sortedQuotes","sort","quoteA","quoteB","sorting","onClick","push","list","map","quote","httpReducer","state","action","type","data","error","status","responseData","errorMessage","useHttp","requestFunction","startWithPending","useReducer","httpState","dispatch","sendRequest","useCallback","requestData","message","FIREBASE_DOMAIN","getAllQuotes","fetch","response","json","ok","Error","key","transformedQuotes","quoteObj","getSingleQuote","quoteId","loadedQuote","addQuote","quoteData","method","body","JSON","stringify","headers","addComment","commentData","commentId","name","getAllComments","transformedComments","commentObj","LoadingSpinner","spinner","NoQuotesFound","noquotes","AllQuotes","loadedQuotes","useEffect","length","Card","card","children","QuoteForm","useState","isEntering","setIsEntering","authorInputRef","useRef","textInputRef","when","onFocus","form","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","isLoading","loading","control","htmlFor","ref","rows","actions","NewQuote","HighlightedQuote","NewCommentForm","commentTextRef","onAddedComment","submitFormHandler","CommentItem","CommentsList","comments","comment","Comments","isAddingComment","setIsAddingComment","useParams","loadedComments","addedCommentHandler","NotFound","QuoteDetail","match","useRouteMatch","path","exact","url","MainNavigation","Classes","header","logo","nav","activeClassName","active","Layout","main","App","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.de1a17b8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__1ENwm\",\"loading\":\"QuoteForm_loading__32cSe\",\"control\":\"QuoteForm_control__3RDtF\",\"actions\":\"QuoteForm_actions__2_kQM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__2JNjo\",\"logo\":\"MainNavigation_logo__1qxol\",\"nav\":\"MainNavigation_nav__1vQEA\",\"active\":\"MainNavigation_active__TQncK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__3y5lg\",\"loading\":\"NewCommentForm_loading__1JkoP\",\"control\":\"NewCommentForm_control__2mc-W\",\"actions\":\"NewCommentForm_actions__akPds\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__3LKsq\",\"sorting\":\"QuoteList_sorting__1FGPy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__2oVce\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__2K3xy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__3FX5R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__6K_FY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__2iAY8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__2VmH9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__2VeO2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__241X3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__fctMm\"};","import classes from \"./QuoteItem.module.css\";\nimport { Link } from \"react-router-dom\";\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link className=\"btn\" to={`quotes/${props.id}`}>\n        View Fullscreen\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import { Fragment } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport QuoteItem from \"./QuoteItem\";\nimport classes from \"./QuoteList.module.css\";\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = (props) => {\n  const history = useHistory();\n  const location = useLocation();\n\n  const queryParams = new URLSearchParams(location.search);\n\n  const isSortingAscending = queryParams.get(\"sort\") === \"asc\";\n\n  const sortedQuotes = sortQuotes(props.quotes, isSortingAscending);\n\n  const chanageSortingHandler = () => {\n    history.push(\"./quotes?sort=\" + (isSortingAscending ? \"desc\" : \"asc\"));\n  };\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={chanageSortingHandler}>\n          Sort {isSortingAscending ? \"Descending\" : \"Ascending\"}\n        </button>\n      </div>\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","import { useReducer, useCallback } from \"react\";\n\nfunction httpReducer(state, action) {\n  if (action.type === \"SEND\") {\n    return {\n      data: null,\n      error: null,\n      status: \"pending\",\n    };\n  }\n\n  if (action.type === \"SUCCESS\") {\n    return {\n      data: action.responseData,\n      error: null,\n      status: \"completed\",\n    };\n  }\n\n  if (action.type === \"ERROR\") {\n    return {\n      data: null,\n      error: action.errorMessage,\n      status: \"completed\",\n    };\n  }\n\n  return state;\n}\n\nfunction useHttp(requestFunction, startWithPending = false) {\n  const [httpState, dispatch] = useReducer(httpReducer, {\n    status: startWithPending ? \"pending\" : null,\n    data: null,\n    error: null,\n  });\n\n  const sendRequest = useCallback(\n    async function (requestData) {\n      dispatch({ type: \"SEND\" });\n      try {\n        const responseData = await requestFunction(requestData);\n        dispatch({ type: \"SUCCESS\", responseData });\n      } catch (error) {\n        dispatch({\n          type: \"ERROR\",\n          errorMessage: error.message || \"Something went wrong!\",\n        });\n      }\n    },\n    [requestFunction]\n  );\n\n  return {\n    sendRequest,\n    ...httpState,\n  };\n}\n\nexport default useHttp;\n","const FIREBASE_DOMAIN = \"https://react20-36298-default-rtdb.firebaseio.com\";\n\nexport async function getAllQuotes() {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not fetch quotes.\");\n  }\n\n  const transformedQuotes = [];\n\n  for (const key in data) {\n    const quoteObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedQuotes.push(quoteObj);\n  }\n\n  return transformedQuotes;\n}\n\nexport async function getSingleQuote(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes/${quoteId}.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not fetch quote.\");\n  }\n\n  const loadedQuote = {\n    id: quoteId,\n    ...data,\n  };\n\n  return loadedQuote;\n}\n\nexport async function addQuote(quoteData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`, {\n    method: \"POST\",\n    body: JSON.stringify(quoteData),\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not create quote.\");\n  }\n\n  return null;\n}\n\nexport async function addComment(requestData) {\n  const response = await fetch(\n    `${FIREBASE_DOMAIN}/comments/${requestData.quoteId}.json`,\n    {\n      method: \"POST\",\n      body: JSON.stringify(requestData.commentData),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    }\n  );\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not add comment.\");\n  }\n\n  return { commentId: data.name };\n}\n\nexport async function getAllComments(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${quoteId}.json`);\n\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not get comments.\");\n  }\n\n  const transformedComments = [];\n\n  for (const key in data) {\n    const commentObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedComments.push(commentObj);\n  }\n\n  return transformedComments;\n}\n","import classes from './LoadingSpinner.module.css';\n\nconst LoadingSpinner = () => {\n  return <div className={classes.spinner}></div>;\n}\n\nexport default LoadingSpinner;\n","import classes from \"./NoQuotesFound.module.css\";\nimport { Link } from \"react-router-dom\";\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link className=\"btn\" to=\"/new-quote\">\n        Add a Quote\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","import { useEffect } from \"react\";\r\nimport QuoteList from \"../components/quotes/QuoteList\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { getAllQuotes } from \"../lib/api\";\r\nimport LoadingSpinner from \"../components/ui/LoadingSpinner\";\r\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\";\r\n\r\nconst AllQuotes = () => {\r\n  const {\r\n    sendRequest,\r\n    status,\r\n    data: loadedQuotes,\r\n    error,\r\n  } = useHttp(getAllQuotes, true);\r\n\r\n  useEffect(() => {\r\n    sendRequest();\r\n  }, [sendRequest]);\r\n  if (status === \"pending\") {\r\n    return (\r\n      <div className=\"centered\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n  if (error) {\r\n    return <p className=\"centered focused\">{error}</p>;\r\n  }\r\n  if (status === \"completed\" && (!loadedQuotes || loadedQuotes.length === 0)) {\r\n    return <NoQuotesFound />;\r\n  }\r\n  return <QuoteList quotes={loadedQuotes} />;\r\n};\r\nexport default AllQuotes;\r\n","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import { Fragment, useRef, useState } from \"react\";\nimport Card from \"../ui/Card\";\nimport LoadingSpinner from \"../ui/LoadingSpinner\";\nimport classes from \"./QuoteForm.module.css\";\nimport { Prompt } from \"react-router-dom\";\n\nconst QuoteForm = (props) => {\n  const [isEntering, setIsEntering] = useState(false);\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n\n  const formFocusedHandler = () => {\n    setIsEntering(true);\n  };\n  const finishEnteringHandler = () => {\n    setIsEntering(false);\n  };\n  return (\n    <Fragment>\n      <Prompt\n        when={isEntering}\n        message={(location) =>\n          \"Are you sure you want to leave? All your data will be lost! \"\n        }\n      />\n      <Card>\n        <form\n          onFocus={formFocusedHandler}\n          className={classes.form}\n          onSubmit={submitFormHandler}\n        >\n          {props.isLoading && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n\n          <div className={classes.control}>\n            <label htmlFor=\"author\">Author</label>\n            <input type=\"text\" id=\"author\" ref={authorInputRef} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor=\"text\">Text</label>\n            <textarea id=\"text\" rows=\"5\" ref={textInputRef}></textarea>\n          </div>\n          <div className={classes.actions}>\n            <button onClick={finishEnteringHandler} className=\"btn\">\n              Add Quote\n            </button>\n          </div>\n        </form>\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default QuoteForm;\n","import { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport QuoteForm from \"../components/quotes/QuoteForm\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { addQuote } from \"../lib/api\";\r\nconst NewQuote = () => {\r\n  const { sendRequest, status } = useHttp(addQuote);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (status === \"completed\") {\r\n      history.push(\"/quotes\");\r\n    }\r\n  }, [status, history]);\r\n\r\n  const addQuoteHandler = (quoteData) => {\r\n    sendRequest(quoteData);\r\n  };\r\n  return (\r\n    <QuoteForm\r\n      isLoading={status === \"pending\"}\r\n      onAddQuote={addQuoteHandler}\r\n    ></QuoteForm>\r\n  );\r\n};\r\nexport default NewQuote;\r\n","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import { useEffect, useRef } from \"react\";\nimport useHttp from \"../../hooks/use-http\";\nimport { addComment } from \"../../lib/api\";\nimport LoadingSpinner from \"../../components/ui/LoadingSpinner\";\nimport classes from \"./NewCommentForm.module.css\";\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n\n  const { sendRequest, status, error } = useHttp(addComment);\n\n  const { onAddedComment } = props;\n\n  useEffect(() => {\n    if (status === \"completed\" && !error) {\n      onAddedComment();\n    }\n  }, [status, error, onAddedComment]);\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n    const enteredText = commentTextRef.current.value;\n\n    // optional: Could validate here\n\n    sendRequest({ commentData: { text: enteredText }, quoteId: props.quoteId });\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {status === \"pending\" && (\n        <div className=\"centered\">\n          <LoadingSpinner />\n        </div>\n      )}\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor=\"comment\">Your Comment</label>\n        <textarea id=\"comment\" rows=\"5\" ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className=\"btn\">Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useCallback, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport useHttp from \"../../hooks/use-http\";\nimport { getAllComments } from \"../../lib/api\";\nimport classes from \"./Comments.module.css\";\nimport NewCommentForm from \"./NewCommentForm\";\nimport LoadingSpinner from \"../ui/LoadingSpinner\";\nimport CommentsList from \"./CommentsList\";\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n\n  const { quoteId } = params;\n\n  const { sendRequest, status, data: loadedComments } = useHttp(getAllComments);\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [quoteId, sendRequest]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n  const addedCommentHandler = useCallback(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  let comments;\n\n  if (status === \"pending\") {\n    comments = (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n  if (status === \"completed\" && loadedComments && loadedComments.length > 0) {\n    comments = <CommentsList comments={loadedComments} />;\n  }\n  if (\n    status === \"completed\" &&\n    (!loadedComments || loadedComments.length === 0)\n  ) {\n    comments = <p className=\"centered\">No comments were added yet!</p>;\n  }\n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className=\"btn\" onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && (\n        <NewCommentForm\n          quoteId={quoteId}\n          onAddedComment={addedCommentHandler}\n        />\n      )}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;\n","const NotFound = () => {\r\n  return <p>The Page Not Found</p>;\r\n};\r\nexport default NotFound;\r\n","import { Fragment, useEffect } from \"react\";\r\nimport { Link, Route, useParams, useRouteMatch } from \"react-router-dom\";\r\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\r\nimport Comments from \"../components/comments/Comments\";\r\nimport NotFound from \"./NotFound\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { getSingleQuote } from \"../lib/api\";\r\nimport LoadingSpinner from \"../components/ui/LoadingSpinner\";\r\nconst QuoteDetail = () => {\r\n  const match = useRouteMatch();\r\n  const params = useParams();\r\n\r\n  const { quoteId } = params;\r\n  const {\r\n    sendRequest,\r\n    status,\r\n    data: loadedQuote,\r\n    error,\r\n  } = useHttp(getSingleQuote, true);\r\n\r\n  useEffect(() => {\r\n    sendRequest(quoteId);\r\n  }, [sendRequest, quoteId]);\r\n\r\n  if (status === \"pending\") {\r\n    return (\r\n      <div className=\"centered\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n  if (error) {\r\n    return <p className=\"centered \">{error}</p>;\r\n  }\r\n\r\n  if (!loadedQuote.text) {\r\n    return <p>No quote found!</p>;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <HighlightedQuote text={loadedQuote.text} author={loadedQuote.author} />\r\n      <Route path={match.path} exact>\r\n        <div className=\"centered\">\r\n          <Link className=\"btn--flat\" to={`${match.url}/comments`}>\r\n            Load Comments\r\n          </Link>\r\n        </div>\r\n      </Route>\r\n      <Route path={`${match.path}/comments`}>\r\n        <Comments />\r\n      </Route>\r\n    </Fragment>\r\n  );\r\n};\r\nexport default QuoteDetail;\r\n","import { NavLink } from \"react-router-dom\";\r\nimport Classes from \"./MainNavigation.module.css\";\r\nconst MainNavigation = () => {\r\n  return (\r\n    <header className={Classes.header}>\r\n      <div className={Classes.logo}>Great Quotes</div>\r\n      <nav className={Classes.nav}>\r\n        <ul>\r\n          <li>\r\n            <NavLink to=\"/quotes\" activeClassName={Classes.active}>\r\n              All Quotes\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink to=\"/new-quote\" activeClassName={Classes.active}>\r\n              Add a Quote\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\nexport default MainNavigation;\r\n","import { Fragment } from \"react\";\r\nimport MainNavigation from \"./MainNavigation\";\r\nimport Classes from \"./Layout.module.css\";\r\nconst Layout = (props) => {\r\n  return (\r\n    <Fragment>\r\n      <MainNavigation />\r\n      <main className={Classes.main}>{props.children}</main>\r\n    </Fragment>\r\n  );\r\n};\r\nexport default Layout;\r\n","import { Redirect, Route, Switch } from \"react-router-dom\";\nimport AllQuotes from \"./Pages/AllQuotes\";\nimport NewQuote from \"./Pages/NewQuote\";\nimport QuoteDetail from \"./Pages/QuoteDetail\";\nimport Layout from \"./components/layout/Layout\";\nimport NotFound from \"./Pages/NotFound\";\nfunction App() {\n  return (\n    <Layout>\n      <Switch>\n        <Route path=\"/\" exact>\n          <Redirect to=\"/quotes\" />\n        </Route>\n        <Route path=\"/quotes\" exact>\n          <AllQuotes />\n        </Route>\n        <Route path=\"/quotes/:quoteId\">\n          <QuoteDetail />\n        </Route>\n        <Route path=\"/new-quote\">\n          <NewQuote />\n        </Route>\n        <Route path=\"*\">\n          <NotFound />\n        </Route>\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default App;\n","import ReactDOM from \"react-dom/client\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n);\n"],"sourceRoot":""}